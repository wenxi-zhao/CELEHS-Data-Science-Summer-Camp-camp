{
  "version": 3,
  "sources": ["../../../../property-information/lib/util/schema.js", "../../../../property-information/lib/util/merge.js", "../../../../property-information/lib/normalize.js", "../../../../property-information/lib/util/info.js", "../../../../property-information/lib/util/types.js", "../../../../property-information/lib/util/defined-info.js", "../../../../property-information/lib/util/create.js", "../../../../property-information/lib/xlink.js", "../../../../property-information/lib/xml.js", "../../../../property-information/lib/util/case-sensitive-transform.js", "../../../../property-information/lib/util/case-insensitive-transform.js", "../../../../property-information/lib/xmlns.js", "../../../../property-information/lib/aria.js", "../../../../property-information/lib/html.js", "../../../../property-information/lib/svg.js", "../../../../property-information/lib/find.js", "../../../../property-information/index.js", "../../../../comma-separated-tokens/index.js", "../../../../hast-util-parse-selector/lib/index.js", "../../../../space-separated-tokens/index.js", "../../../../hastscript/lib/create-h.js", "../../../../hastscript/lib/svg-case-sensitive-tag-names.js", "../../../../hastscript/lib/index.js", "../../../../vfile-location/lib/index.js", "../../../../web-namespaces/index.js", "../../../../hast-util-from-parse5/lib/index.js", "../../../../hast-util-to-parse5/lib/index.js", "../../../../html-void-elements/index.js", "../../../../hast-util-raw/lib/index.js", "../../../../rehype-raw/lib/index.js"],
  "sourcesContent": ["/**\r\n * @typedef {import('./info.js').Info} Info\r\n * @typedef {Record<string, Info>} Properties\r\n * @typedef {Record<string, string>} Normal\r\n */\r\n\r\nexport class Schema {\r\n  /**\r\n   * @constructor\r\n   * @param {Properties} property\r\n   * @param {Normal} normal\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, normal, space) {\r\n    this.property = property\r\n    this.normal = normal\r\n    if (space) {\r\n      this.space = space\r\n    }\r\n  }\r\n}\r\n\r\n/** @type {Properties} */\r\nSchema.prototype.property = {}\r\n/** @type {Normal} */\r\nSchema.prototype.normal = {}\r\n/** @type {string|null} */\r\nSchema.prototype.space = null\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n */\r\n\r\nimport {Schema} from './schema.js'\r\n\r\n/**\r\n * @param {Schema[]} definitions\r\n * @param {string} [space]\r\n * @returns {Schema}\r\n */\r\nexport function merge(definitions, space) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  let index = -1\r\n\r\n  while (++index < definitions.length) {\r\n    Object.assign(property, definitions[index].property)\r\n    Object.assign(normal, definitions[index].normal)\r\n  }\r\n\r\n  return new Schema(property, normal, space)\r\n}\r\n", "/**\r\n * @param {string} value\r\n * @returns {string}\r\n */\r\nexport function normalize(value) {\r\n  return value.toLowerCase()\r\n}\r\n", "export class Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   */\r\n  constructor(property, attribute) {\r\n    /** @type {string} */\r\n    this.property = property\r\n    /** @type {string} */\r\n    this.attribute = attribute\r\n  }\r\n}\r\n\r\n/** @type {string|null} */\r\nInfo.prototype.space = null\r\nInfo.prototype.boolean = false\r\nInfo.prototype.booleanish = false\r\nInfo.prototype.overloadedBoolean = false\r\nInfo.prototype.number = false\r\nInfo.prototype.commaSeparated = false\r\nInfo.prototype.spaceSeparated = false\r\nInfo.prototype.commaOrSpaceSeparated = false\r\nInfo.prototype.mustUseProperty = false\r\nInfo.prototype.defined = false\r\n", "let powers = 0\r\n\r\nexport const boolean = increment()\r\nexport const booleanish = increment()\r\nexport const overloadedBoolean = increment()\r\nexport const number = increment()\r\nexport const spaceSeparated = increment()\r\nexport const commaSeparated = increment()\r\nexport const commaOrSpaceSeparated = increment()\r\n\r\nfunction increment() {\r\n  return 2 ** ++powers\r\n}\r\n", "import {Info} from './info.js'\r\nimport * as types from './types.js'\r\n\r\n/** @type {Array<keyof types>} */\r\n// @ts-expect-error: hush.\r\nconst checks = Object.keys(types)\r\n\r\nexport class DefinedInfo extends Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   * @param {number|null} [mask]\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, attribute, mask, space) {\r\n    let index = -1\r\n\r\n    super(property, attribute)\r\n\r\n    mark(this, 'space', space)\r\n\r\n    if (typeof mask === 'number') {\r\n      while (++index < checks.length) {\r\n        const check = checks[index]\r\n        mark(this, checks[index], (mask & types[check]) === types[check])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nDefinedInfo.prototype.defined = true\r\n\r\n/**\r\n * @param {DefinedInfo} values\r\n * @param {string} key\r\n * @param {unknown} value\r\n */\r\nfunction mark(values, key, value) {\r\n  if (value) {\r\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\r\n    values[key] = value\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n *\r\n * @typedef {Record<string, string>} Attributes\r\n *\r\n * @typedef {Object} Definition\r\n * @property {Record<string, number|null>} properties\r\n * @property {(attributes: Attributes, property: string) => string} transform\r\n * @property {string} [space]\r\n * @property {Attributes} [attributes]\r\n * @property {Array<string>} [mustUseProperty]\r\n */\r\n\r\nimport {normalize} from '../normalize.js'\r\nimport {Schema} from './schema.js'\r\nimport {DefinedInfo} from './defined-info.js'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Definition} definition\r\n * @returns {Schema}\r\n */\r\nexport function create(definition) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  for (prop in definition.properties) {\r\n    if (own.call(definition.properties, prop)) {\r\n      const value = definition.properties[prop]\r\n      const info = new DefinedInfo(\r\n        prop,\r\n        definition.transform(definition.attributes || {}, prop),\r\n        value,\r\n        definition.space\r\n      )\r\n\r\n      if (\r\n        definition.mustUseProperty &&\r\n        definition.mustUseProperty.includes(prop)\r\n      ) {\r\n        info.mustUseProperty = true\r\n      }\r\n\r\n      property[prop] = info\r\n\r\n      normal[normalize(prop)] = prop\r\n      normal[normalize(info.attribute)] = prop\r\n    }\r\n  }\r\n\r\n  return new Schema(property, normal, definition.space)\r\n}\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xlink = create({\r\n  space: 'xlink',\r\n  transform(_, prop) {\r\n    return 'xlink:' + prop.slice(5).toLowerCase()\r\n  },\r\n  properties: {\r\n    xLinkActuate: null,\r\n    xLinkArcRole: null,\r\n    xLinkHref: null,\r\n    xLinkRole: null,\r\n    xLinkShow: null,\r\n    xLinkTitle: null,\r\n    xLinkType: null\r\n  }\r\n})\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xml = create({\r\n  space: 'xml',\r\n  transform(_, prop) {\r\n    return 'xml:' + prop.slice(3).toLowerCase()\r\n  },\r\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\r\n})\r\n", "/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} attribute\r\n * @returns {string}\r\n */\r\nexport function caseSensitiveTransform(attributes, attribute) {\r\n  return attribute in attributes ? attributes[attribute] : attribute\r\n}\r\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\r\n\r\n/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} property\r\n * @returns {string}\r\n */\r\nexport function caseInsensitiveTransform(attributes, property) {\r\n  return caseSensitiveTransform(attributes, property.toLowerCase())\r\n}\r\n", "import {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const xmlns = create({\r\n  space: 'xmlns',\r\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\r\n  transform: caseInsensitiveTransform,\r\n  properties: {xmlns: null, xmlnsXLink: null}\r\n})\r\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\r\nimport {create} from './util/create.js'\r\n\r\nexport const aria = create({\r\n  transform(_, prop) {\r\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\r\n  },\r\n  properties: {\r\n    ariaActiveDescendant: null,\r\n    ariaAtomic: booleanish,\r\n    ariaAutoComplete: null,\r\n    ariaBusy: booleanish,\r\n    ariaChecked: booleanish,\r\n    ariaColCount: number,\r\n    ariaColIndex: number,\r\n    ariaColSpan: number,\r\n    ariaControls: spaceSeparated,\r\n    ariaCurrent: null,\r\n    ariaDescribedBy: spaceSeparated,\r\n    ariaDetails: null,\r\n    ariaDisabled: booleanish,\r\n    ariaDropEffect: spaceSeparated,\r\n    ariaErrorMessage: null,\r\n    ariaExpanded: booleanish,\r\n    ariaFlowTo: spaceSeparated,\r\n    ariaGrabbed: booleanish,\r\n    ariaHasPopup: null,\r\n    ariaHidden: booleanish,\r\n    ariaInvalid: null,\r\n    ariaKeyShortcuts: null,\r\n    ariaLabel: null,\r\n    ariaLabelledBy: spaceSeparated,\r\n    ariaLevel: number,\r\n    ariaLive: null,\r\n    ariaModal: booleanish,\r\n    ariaMultiLine: booleanish,\r\n    ariaMultiSelectable: booleanish,\r\n    ariaOrientation: null,\r\n    ariaOwns: spaceSeparated,\r\n    ariaPlaceholder: null,\r\n    ariaPosInSet: number,\r\n    ariaPressed: booleanish,\r\n    ariaReadOnly: booleanish,\r\n    ariaRelevant: null,\r\n    ariaRequired: booleanish,\r\n    ariaRoleDescription: spaceSeparated,\r\n    ariaRowCount: number,\r\n    ariaRowIndex: number,\r\n    ariaRowSpan: number,\r\n    ariaSelected: booleanish,\r\n    ariaSetSize: number,\r\n    ariaSort: null,\r\n    ariaValueMax: number,\r\n    ariaValueMin: number,\r\n    ariaValueNow: number,\r\n    ariaValueText: null,\r\n    role: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  overloadedBoolean,\r\n  booleanish,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const html = create({\r\n  space: 'html',\r\n  attributes: {\r\n    acceptcharset: 'accept-charset',\r\n    classname: 'class',\r\n    htmlfor: 'for',\r\n    httpequiv: 'http-equiv'\r\n  },\r\n  transform: caseInsensitiveTransform,\r\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\r\n  properties: {\r\n    // Standard Properties.\r\n    abbr: null,\r\n    accept: commaSeparated,\r\n    acceptCharset: spaceSeparated,\r\n    accessKey: spaceSeparated,\r\n    action: null,\r\n    allow: null,\r\n    allowFullScreen: boolean,\r\n    allowPaymentRequest: boolean,\r\n    allowUserMedia: boolean,\r\n    alt: null,\r\n    as: null,\r\n    async: boolean,\r\n    autoCapitalize: null,\r\n    autoComplete: spaceSeparated,\r\n    autoFocus: boolean,\r\n    autoPlay: boolean,\r\n    blocking: spaceSeparated,\r\n    capture: null,\r\n    charSet: null,\r\n    checked: boolean,\r\n    cite: null,\r\n    className: spaceSeparated,\r\n    cols: number,\r\n    colSpan: null,\r\n    content: null,\r\n    contentEditable: booleanish,\r\n    controls: boolean,\r\n    controlsList: spaceSeparated,\r\n    coords: number | commaSeparated,\r\n    crossOrigin: null,\r\n    data: null,\r\n    dateTime: null,\r\n    decoding: null,\r\n    default: boolean,\r\n    defer: boolean,\r\n    dir: null,\r\n    dirName: null,\r\n    disabled: boolean,\r\n    download: overloadedBoolean,\r\n    draggable: booleanish,\r\n    encType: null,\r\n    enterKeyHint: null,\r\n    fetchPriority: null,\r\n    form: null,\r\n    formAction: null,\r\n    formEncType: null,\r\n    formMethod: null,\r\n    formNoValidate: boolean,\r\n    formTarget: null,\r\n    headers: spaceSeparated,\r\n    height: number,\r\n    hidden: boolean,\r\n    high: number,\r\n    href: null,\r\n    hrefLang: null,\r\n    htmlFor: spaceSeparated,\r\n    httpEquiv: spaceSeparated,\r\n    id: null,\r\n    imageSizes: null,\r\n    imageSrcSet: null,\r\n    inert: boolean,\r\n    inputMode: null,\r\n    integrity: null,\r\n    is: null,\r\n    isMap: boolean,\r\n    itemId: null,\r\n    itemProp: spaceSeparated,\r\n    itemRef: spaceSeparated,\r\n    itemScope: boolean,\r\n    itemType: spaceSeparated,\r\n    kind: null,\r\n    label: null,\r\n    lang: null,\r\n    language: null,\r\n    list: null,\r\n    loading: null,\r\n    loop: boolean,\r\n    low: number,\r\n    manifest: null,\r\n    max: null,\r\n    maxLength: number,\r\n    media: null,\r\n    method: null,\r\n    min: null,\r\n    minLength: number,\r\n    multiple: boolean,\r\n    muted: boolean,\r\n    name: null,\r\n    nonce: null,\r\n    noModule: boolean,\r\n    noValidate: boolean,\r\n    onAbort: null,\r\n    onAfterPrint: null,\r\n    onAuxClick: null,\r\n    onBeforeMatch: null,\r\n    onBeforePrint: null,\r\n    onBeforeToggle: null,\r\n    onBeforeUnload: null,\r\n    onBlur: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onContextLost: null,\r\n    onContextMenu: null,\r\n    onContextRestored: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFormData: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLanguageChange: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadEnd: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMessageError: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRejectionHandled: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onScrollEnd: null,\r\n    onSecurityPolicyViolation: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onSlotChange: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnhandledRejection: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onWheel: null,\r\n    open: boolean,\r\n    optimum: number,\r\n    pattern: null,\r\n    ping: spaceSeparated,\r\n    placeholder: null,\r\n    playsInline: boolean,\r\n    popover: null,\r\n    popoverTarget: null,\r\n    popoverTargetAction: null,\r\n    poster: null,\r\n    preload: null,\r\n    readOnly: boolean,\r\n    referrerPolicy: null,\r\n    rel: spaceSeparated,\r\n    required: boolean,\r\n    reversed: boolean,\r\n    rows: number,\r\n    rowSpan: number,\r\n    sandbox: spaceSeparated,\r\n    scope: null,\r\n    scoped: boolean,\r\n    seamless: boolean,\r\n    selected: boolean,\r\n    shadowRootClonable: boolean,\r\n    shadowRootDelegatesFocus: boolean,\r\n    shadowRootMode: null,\r\n    shape: null,\r\n    size: number,\r\n    sizes: null,\r\n    slot: null,\r\n    span: number,\r\n    spellCheck: booleanish,\r\n    src: null,\r\n    srcDoc: null,\r\n    srcLang: null,\r\n    srcSet: null,\r\n    start: number,\r\n    step: null,\r\n    style: null,\r\n    tabIndex: number,\r\n    target: null,\r\n    title: null,\r\n    translate: null,\r\n    type: null,\r\n    typeMustMatch: boolean,\r\n    useMap: null,\r\n    value: booleanish,\r\n    width: number,\r\n    wrap: null,\r\n    writingSuggestions: null,\r\n\r\n    // Legacy.\r\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\r\n    align: null, // Several. Use CSS `text-align` instead,\r\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\r\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\r\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\r\n    background: null, // `<body>`. Use CSS `background-image` instead\r\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\r\n    border: number, // `<table>`. Use CSS `border-width` instead,\r\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\r\n    bottomMargin: number, // `<body>`\r\n    cellPadding: null, // `<table>`\r\n    cellSpacing: null, // `<table>`\r\n    char: null, // Several table elements. When `align=char`, sets the character to align on\r\n    charOff: null, // Several table elements. When `char`, offsets the alignment\r\n    classId: null, // `<object>`\r\n    clear: null, // `<br>`. Use CSS `clear` instead\r\n    code: null, // `<object>`\r\n    codeBase: null, // `<object>`\r\n    codeType: null, // `<object>`\r\n    color: null, // `<font>` and `<hr>`. Use CSS instead\r\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\r\n    declare: boolean, // `<object>`\r\n    event: null, // `<script>`\r\n    face: null, // `<font>`. Use CSS instead\r\n    frame: null, // `<table>`\r\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\r\n    hSpace: number, // `<img>` and `<object>`\r\n    leftMargin: number, // `<body>`\r\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\r\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\r\n    lowSrc: null, // `<img>`. Use a `<picture>`\r\n    marginHeight: number, // `<body>`\r\n    marginWidth: number, // `<body>`\r\n    noResize: boolean, // `<frame>`\r\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\r\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\r\n    noWrap: boolean, // `<td>` and `<th>`\r\n    object: null, // `<applet>`\r\n    profile: null, // `<head>`\r\n    prompt: null, // `<isindex>`\r\n    rev: null, // `<link>`\r\n    rightMargin: number, // `<body>`\r\n    rules: null, // `<table>`\r\n    scheme: null, // `<meta>`\r\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\r\n    standby: null, // `<object>`\r\n    summary: null, // `<table>`\r\n    text: null, // `<body>`. Use CSS `color` instead\r\n    topMargin: number, // `<body>`\r\n    valueType: null, // `<param>`\r\n    version: null, // `<html>`. Use a doctype.\r\n    vAlign: null, // Several. Use CSS `vertical-align` instead\r\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\r\n    vSpace: number, // `<img>` and `<object>`\r\n\r\n    // Non-standard Properties.\r\n    allowTransparency: null,\r\n    autoCorrect: null,\r\n    autoSave: null,\r\n    disablePictureInPicture: boolean,\r\n    disableRemotePlayback: boolean,\r\n    prefix: null,\r\n    property: null,\r\n    results: number,\r\n    security: null,\r\n    unselectable: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated,\r\n  commaOrSpaceSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\r\n\r\nexport const svg = create({\r\n  space: 'svg',\r\n  attributes: {\r\n    accentHeight: 'accent-height',\r\n    alignmentBaseline: 'alignment-baseline',\r\n    arabicForm: 'arabic-form',\r\n    baselineShift: 'baseline-shift',\r\n    capHeight: 'cap-height',\r\n    className: 'class',\r\n    clipPath: 'clip-path',\r\n    clipRule: 'clip-rule',\r\n    colorInterpolation: 'color-interpolation',\r\n    colorInterpolationFilters: 'color-interpolation-filters',\r\n    colorProfile: 'color-profile',\r\n    colorRendering: 'color-rendering',\r\n    crossOrigin: 'crossorigin',\r\n    dataType: 'datatype',\r\n    dominantBaseline: 'dominant-baseline',\r\n    enableBackground: 'enable-background',\r\n    fillOpacity: 'fill-opacity',\r\n    fillRule: 'fill-rule',\r\n    floodColor: 'flood-color',\r\n    floodOpacity: 'flood-opacity',\r\n    fontFamily: 'font-family',\r\n    fontSize: 'font-size',\r\n    fontSizeAdjust: 'font-size-adjust',\r\n    fontStretch: 'font-stretch',\r\n    fontStyle: 'font-style',\r\n    fontVariant: 'font-variant',\r\n    fontWeight: 'font-weight',\r\n    glyphName: 'glyph-name',\r\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\r\n    glyphOrientationVertical: 'glyph-orientation-vertical',\r\n    hrefLang: 'hreflang',\r\n    horizAdvX: 'horiz-adv-x',\r\n    horizOriginX: 'horiz-origin-x',\r\n    horizOriginY: 'horiz-origin-y',\r\n    imageRendering: 'image-rendering',\r\n    letterSpacing: 'letter-spacing',\r\n    lightingColor: 'lighting-color',\r\n    markerEnd: 'marker-end',\r\n    markerMid: 'marker-mid',\r\n    markerStart: 'marker-start',\r\n    navDown: 'nav-down',\r\n    navDownLeft: 'nav-down-left',\r\n    navDownRight: 'nav-down-right',\r\n    navLeft: 'nav-left',\r\n    navNext: 'nav-next',\r\n    navPrev: 'nav-prev',\r\n    navRight: 'nav-right',\r\n    navUp: 'nav-up',\r\n    navUpLeft: 'nav-up-left',\r\n    navUpRight: 'nav-up-right',\r\n    onAbort: 'onabort',\r\n    onActivate: 'onactivate',\r\n    onAfterPrint: 'onafterprint',\r\n    onBeforePrint: 'onbeforeprint',\r\n    onBegin: 'onbegin',\r\n    onCancel: 'oncancel',\r\n    onCanPlay: 'oncanplay',\r\n    onCanPlayThrough: 'oncanplaythrough',\r\n    onChange: 'onchange',\r\n    onClick: 'onclick',\r\n    onClose: 'onclose',\r\n    onCopy: 'oncopy',\r\n    onCueChange: 'oncuechange',\r\n    onCut: 'oncut',\r\n    onDblClick: 'ondblclick',\r\n    onDrag: 'ondrag',\r\n    onDragEnd: 'ondragend',\r\n    onDragEnter: 'ondragenter',\r\n    onDragExit: 'ondragexit',\r\n    onDragLeave: 'ondragleave',\r\n    onDragOver: 'ondragover',\r\n    onDragStart: 'ondragstart',\r\n    onDrop: 'ondrop',\r\n    onDurationChange: 'ondurationchange',\r\n    onEmptied: 'onemptied',\r\n    onEnd: 'onend',\r\n    onEnded: 'onended',\r\n    onError: 'onerror',\r\n    onFocus: 'onfocus',\r\n    onFocusIn: 'onfocusin',\r\n    onFocusOut: 'onfocusout',\r\n    onHashChange: 'onhashchange',\r\n    onInput: 'oninput',\r\n    onInvalid: 'oninvalid',\r\n    onKeyDown: 'onkeydown',\r\n    onKeyPress: 'onkeypress',\r\n    onKeyUp: 'onkeyup',\r\n    onLoad: 'onload',\r\n    onLoadedData: 'onloadeddata',\r\n    onLoadedMetadata: 'onloadedmetadata',\r\n    onLoadStart: 'onloadstart',\r\n    onMessage: 'onmessage',\r\n    onMouseDown: 'onmousedown',\r\n    onMouseEnter: 'onmouseenter',\r\n    onMouseLeave: 'onmouseleave',\r\n    onMouseMove: 'onmousemove',\r\n    onMouseOut: 'onmouseout',\r\n    onMouseOver: 'onmouseover',\r\n    onMouseUp: 'onmouseup',\r\n    onMouseWheel: 'onmousewheel',\r\n    onOffline: 'onoffline',\r\n    onOnline: 'ononline',\r\n    onPageHide: 'onpagehide',\r\n    onPageShow: 'onpageshow',\r\n    onPaste: 'onpaste',\r\n    onPause: 'onpause',\r\n    onPlay: 'onplay',\r\n    onPlaying: 'onplaying',\r\n    onPopState: 'onpopstate',\r\n    onProgress: 'onprogress',\r\n    onRateChange: 'onratechange',\r\n    onRepeat: 'onrepeat',\r\n    onReset: 'onreset',\r\n    onResize: 'onresize',\r\n    onScroll: 'onscroll',\r\n    onSeeked: 'onseeked',\r\n    onSeeking: 'onseeking',\r\n    onSelect: 'onselect',\r\n    onShow: 'onshow',\r\n    onStalled: 'onstalled',\r\n    onStorage: 'onstorage',\r\n    onSubmit: 'onsubmit',\r\n    onSuspend: 'onsuspend',\r\n    onTimeUpdate: 'ontimeupdate',\r\n    onToggle: 'ontoggle',\r\n    onUnload: 'onunload',\r\n    onVolumeChange: 'onvolumechange',\r\n    onWaiting: 'onwaiting',\r\n    onZoom: 'onzoom',\r\n    overlinePosition: 'overline-position',\r\n    overlineThickness: 'overline-thickness',\r\n    paintOrder: 'paint-order',\r\n    panose1: 'panose-1',\r\n    pointerEvents: 'pointer-events',\r\n    referrerPolicy: 'referrerpolicy',\r\n    renderingIntent: 'rendering-intent',\r\n    shapeRendering: 'shape-rendering',\r\n    stopColor: 'stop-color',\r\n    stopOpacity: 'stop-opacity',\r\n    strikethroughPosition: 'strikethrough-position',\r\n    strikethroughThickness: 'strikethrough-thickness',\r\n    strokeDashArray: 'stroke-dasharray',\r\n    strokeDashOffset: 'stroke-dashoffset',\r\n    strokeLineCap: 'stroke-linecap',\r\n    strokeLineJoin: 'stroke-linejoin',\r\n    strokeMiterLimit: 'stroke-miterlimit',\r\n    strokeOpacity: 'stroke-opacity',\r\n    strokeWidth: 'stroke-width',\r\n    tabIndex: 'tabindex',\r\n    textAnchor: 'text-anchor',\r\n    textDecoration: 'text-decoration',\r\n    textRendering: 'text-rendering',\r\n    transformOrigin: 'transform-origin',\r\n    typeOf: 'typeof',\r\n    underlinePosition: 'underline-position',\r\n    underlineThickness: 'underline-thickness',\r\n    unicodeBidi: 'unicode-bidi',\r\n    unicodeRange: 'unicode-range',\r\n    unitsPerEm: 'units-per-em',\r\n    vAlphabetic: 'v-alphabetic',\r\n    vHanging: 'v-hanging',\r\n    vIdeographic: 'v-ideographic',\r\n    vMathematical: 'v-mathematical',\r\n    vectorEffect: 'vector-effect',\r\n    vertAdvY: 'vert-adv-y',\r\n    vertOriginX: 'vert-origin-x',\r\n    vertOriginY: 'vert-origin-y',\r\n    wordSpacing: 'word-spacing',\r\n    writingMode: 'writing-mode',\r\n    xHeight: 'x-height',\r\n    // These were camelcased in Tiny. Now lowercased in SVG 2\r\n    playbackOrder: 'playbackorder',\r\n    timelineBegin: 'timelinebegin'\r\n  },\r\n  transform: caseSensitiveTransform,\r\n  properties: {\r\n    about: commaOrSpaceSeparated,\r\n    accentHeight: number,\r\n    accumulate: null,\r\n    additive: null,\r\n    alignmentBaseline: null,\r\n    alphabetic: number,\r\n    amplitude: number,\r\n    arabicForm: null,\r\n    ascent: number,\r\n    attributeName: null,\r\n    attributeType: null,\r\n    azimuth: number,\r\n    bandwidth: null,\r\n    baselineShift: null,\r\n    baseFrequency: null,\r\n    baseProfile: null,\r\n    bbox: null,\r\n    begin: null,\r\n    bias: number,\r\n    by: null,\r\n    calcMode: null,\r\n    capHeight: number,\r\n    className: spaceSeparated,\r\n    clip: null,\r\n    clipPath: null,\r\n    clipPathUnits: null,\r\n    clipRule: null,\r\n    color: null,\r\n    colorInterpolation: null,\r\n    colorInterpolationFilters: null,\r\n    colorProfile: null,\r\n    colorRendering: null,\r\n    content: null,\r\n    contentScriptType: null,\r\n    contentStyleType: null,\r\n    crossOrigin: null,\r\n    cursor: null,\r\n    cx: null,\r\n    cy: null,\r\n    d: null,\r\n    dataType: null,\r\n    defaultAction: null,\r\n    descent: number,\r\n    diffuseConstant: number,\r\n    direction: null,\r\n    display: null,\r\n    dur: null,\r\n    divisor: number,\r\n    dominantBaseline: null,\r\n    download: boolean,\r\n    dx: null,\r\n    dy: null,\r\n    edgeMode: null,\r\n    editable: null,\r\n    elevation: number,\r\n    enableBackground: null,\r\n    end: null,\r\n    event: null,\r\n    exponent: number,\r\n    externalResourcesRequired: null,\r\n    fill: null,\r\n    fillOpacity: number,\r\n    fillRule: null,\r\n    filter: null,\r\n    filterRes: null,\r\n    filterUnits: null,\r\n    floodColor: null,\r\n    floodOpacity: null,\r\n    focusable: null,\r\n    focusHighlight: null,\r\n    fontFamily: null,\r\n    fontSize: null,\r\n    fontSizeAdjust: null,\r\n    fontStretch: null,\r\n    fontStyle: null,\r\n    fontVariant: null,\r\n    fontWeight: null,\r\n    format: null,\r\n    fr: null,\r\n    from: null,\r\n    fx: null,\r\n    fy: null,\r\n    g1: commaSeparated,\r\n    g2: commaSeparated,\r\n    glyphName: commaSeparated,\r\n    glyphOrientationHorizontal: null,\r\n    glyphOrientationVertical: null,\r\n    glyphRef: null,\r\n    gradientTransform: null,\r\n    gradientUnits: null,\r\n    handler: null,\r\n    hanging: number,\r\n    hatchContentUnits: null,\r\n    hatchUnits: null,\r\n    height: null,\r\n    href: null,\r\n    hrefLang: null,\r\n    horizAdvX: number,\r\n    horizOriginX: number,\r\n    horizOriginY: number,\r\n    id: null,\r\n    ideographic: number,\r\n    imageRendering: null,\r\n    initialVisibility: null,\r\n    in: null,\r\n    in2: null,\r\n    intercept: number,\r\n    k: number,\r\n    k1: number,\r\n    k2: number,\r\n    k3: number,\r\n    k4: number,\r\n    kernelMatrix: commaOrSpaceSeparated,\r\n    kernelUnitLength: null,\r\n    keyPoints: null, // SEMI_COLON_SEPARATED\r\n    keySplines: null, // SEMI_COLON_SEPARATED\r\n    keyTimes: null, // SEMI_COLON_SEPARATED\r\n    kerning: null,\r\n    lang: null,\r\n    lengthAdjust: null,\r\n    letterSpacing: null,\r\n    lightingColor: null,\r\n    limitingConeAngle: number,\r\n    local: null,\r\n    markerEnd: null,\r\n    markerMid: null,\r\n    markerStart: null,\r\n    markerHeight: null,\r\n    markerUnits: null,\r\n    markerWidth: null,\r\n    mask: null,\r\n    maskContentUnits: null,\r\n    maskUnits: null,\r\n    mathematical: null,\r\n    max: null,\r\n    media: null,\r\n    mediaCharacterEncoding: null,\r\n    mediaContentEncodings: null,\r\n    mediaSize: number,\r\n    mediaTime: null,\r\n    method: null,\r\n    min: null,\r\n    mode: null,\r\n    name: null,\r\n    navDown: null,\r\n    navDownLeft: null,\r\n    navDownRight: null,\r\n    navLeft: null,\r\n    navNext: null,\r\n    navPrev: null,\r\n    navRight: null,\r\n    navUp: null,\r\n    navUpLeft: null,\r\n    navUpRight: null,\r\n    numOctaves: null,\r\n    observer: null,\r\n    offset: null,\r\n    onAbort: null,\r\n    onActivate: null,\r\n    onAfterPrint: null,\r\n    onBeforePrint: null,\r\n    onBegin: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnd: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFocusIn: null,\r\n    onFocusOut: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onMouseWheel: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRepeat: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onShow: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onZoom: null,\r\n    opacity: null,\r\n    operator: null,\r\n    order: null,\r\n    orient: null,\r\n    orientation: null,\r\n    origin: null,\r\n    overflow: null,\r\n    overlay: null,\r\n    overlinePosition: number,\r\n    overlineThickness: number,\r\n    paintOrder: null,\r\n    panose1: null,\r\n    path: null,\r\n    pathLength: number,\r\n    patternContentUnits: null,\r\n    patternTransform: null,\r\n    patternUnits: null,\r\n    phase: null,\r\n    ping: spaceSeparated,\r\n    pitch: null,\r\n    playbackOrder: null,\r\n    pointerEvents: null,\r\n    points: null,\r\n    pointsAtX: number,\r\n    pointsAtY: number,\r\n    pointsAtZ: number,\r\n    preserveAlpha: null,\r\n    preserveAspectRatio: null,\r\n    primitiveUnits: null,\r\n    propagate: null,\r\n    property: commaOrSpaceSeparated,\r\n    r: null,\r\n    radius: null,\r\n    referrerPolicy: null,\r\n    refX: null,\r\n    refY: null,\r\n    rel: commaOrSpaceSeparated,\r\n    rev: commaOrSpaceSeparated,\r\n    renderingIntent: null,\r\n    repeatCount: null,\r\n    repeatDur: null,\r\n    requiredExtensions: commaOrSpaceSeparated,\r\n    requiredFeatures: commaOrSpaceSeparated,\r\n    requiredFonts: commaOrSpaceSeparated,\r\n    requiredFormats: commaOrSpaceSeparated,\r\n    resource: null,\r\n    restart: null,\r\n    result: null,\r\n    rotate: null,\r\n    rx: null,\r\n    ry: null,\r\n    scale: null,\r\n    seed: null,\r\n    shapeRendering: null,\r\n    side: null,\r\n    slope: null,\r\n    snapshotTime: null,\r\n    specularConstant: number,\r\n    specularExponent: number,\r\n    spreadMethod: null,\r\n    spacing: null,\r\n    startOffset: null,\r\n    stdDeviation: null,\r\n    stemh: null,\r\n    stemv: null,\r\n    stitchTiles: null,\r\n    stopColor: null,\r\n    stopOpacity: null,\r\n    strikethroughPosition: number,\r\n    strikethroughThickness: number,\r\n    string: null,\r\n    stroke: null,\r\n    strokeDashArray: commaOrSpaceSeparated,\r\n    strokeDashOffset: null,\r\n    strokeLineCap: null,\r\n    strokeLineJoin: null,\r\n    strokeMiterLimit: number,\r\n    strokeOpacity: number,\r\n    strokeWidth: null,\r\n    style: null,\r\n    surfaceScale: number,\r\n    syncBehavior: null,\r\n    syncBehaviorDefault: null,\r\n    syncMaster: null,\r\n    syncTolerance: null,\r\n    syncToleranceDefault: null,\r\n    systemLanguage: commaOrSpaceSeparated,\r\n    tabIndex: number,\r\n    tableValues: null,\r\n    target: null,\r\n    targetX: number,\r\n    targetY: number,\r\n    textAnchor: null,\r\n    textDecoration: null,\r\n    textRendering: null,\r\n    textLength: null,\r\n    timelineBegin: null,\r\n    title: null,\r\n    transformBehavior: null,\r\n    type: null,\r\n    typeOf: commaOrSpaceSeparated,\r\n    to: null,\r\n    transform: null,\r\n    transformOrigin: null,\r\n    u1: null,\r\n    u2: null,\r\n    underlinePosition: number,\r\n    underlineThickness: number,\r\n    unicode: null,\r\n    unicodeBidi: null,\r\n    unicodeRange: null,\r\n    unitsPerEm: number,\r\n    values: null,\r\n    vAlphabetic: number,\r\n    vMathematical: number,\r\n    vectorEffect: null,\r\n    vHanging: number,\r\n    vIdeographic: number,\r\n    version: null,\r\n    vertAdvY: number,\r\n    vertOriginX: number,\r\n    vertOriginY: number,\r\n    viewBox: null,\r\n    viewTarget: null,\r\n    visibility: null,\r\n    width: null,\r\n    widths: null,\r\n    wordSpacing: null,\r\n    writingMode: null,\r\n    x: null,\r\n    x1: null,\r\n    x2: null,\r\n    xChannelSelector: null,\r\n    xHeight: number,\r\n    y: null,\r\n    y1: null,\r\n    y2: null,\r\n    yChannelSelector: null,\r\n    z: null,\r\n    zoomAndPan: null\r\n  }\r\n})\r\n", "/**\r\n * @typedef {import('./util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {normalize} from './normalize.js'\r\nimport {DefinedInfo} from './util/defined-info.js'\r\nimport {Info} from './util/info.js'\r\n\r\nconst valid = /^data[-\\w.:]+$/i\r\nconst dash = /-[a-z]/g\r\nconst cap = /[A-Z]/g\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} value\r\n * @returns {Info}\r\n */\r\nexport function find(schema, value) {\r\n  const normal = normalize(value)\r\n  let prop = value\r\n  let Type = Info\r\n\r\n  if (normal in schema.normal) {\r\n    return schema.property[schema.normal[normal]]\r\n  }\r\n\r\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\r\n    // Attribute or property.\r\n    if (value.charAt(4) === '-') {\r\n      // Turn it into a property.\r\n      const rest = value.slice(5).replace(dash, camelcase)\r\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\r\n    } else {\r\n      // Turn it into an attribute.\r\n      const rest = value.slice(4)\r\n\r\n      if (!dash.test(rest)) {\r\n        let dashes = rest.replace(cap, kebab)\r\n\r\n        if (dashes.charAt(0) !== '-') {\r\n          dashes = '-' + dashes\r\n        }\r\n\r\n        value = 'data' + dashes\r\n      }\r\n    }\r\n\r\n    Type = DefinedInfo\r\n  }\r\n\r\n  return new Type(prop, value)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction kebab($0) {\r\n  return '-' + $0.toLowerCase()\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction camelcase($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n", "/**\r\n * @typedef {import('./lib/util/info.js').Info} Info\r\n * @typedef {import('./lib/util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {merge} from './lib/util/merge.js'\r\nimport {xlink} from './lib/xlink.js'\r\nimport {xml} from './lib/xml.js'\r\nimport {xmlns} from './lib/xmlns.js'\r\nimport {aria} from './lib/aria.js'\r\nimport {html as htmlBase} from './lib/html.js'\r\nimport {svg as svgBase} from './lib/svg.js'\r\n\r\nexport {find} from './lib/find.js'\r\nexport {hastToReact} from './lib/hast-to-react.js'\r\nexport {normalize} from './lib/normalize.js'\r\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\r\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\r\n", "/**\r\n * @typedef Options\r\n *   Configuration for `stringify`.\r\n * @property {boolean} [padLeft=true]\r\n *   Whether to pad a space before a token.\r\n * @property {boolean} [padRight=false]\r\n *   Whether to pad a space after a token.\r\n */\r\n\r\n/**\r\n * @typedef {Options} StringifyOptions\r\n *   Please use `StringifyOptions` instead.\r\n */\r\n\r\n/**\r\n * Parse comma-separated tokens to an array.\r\n *\r\n * @param {string} value\r\n *   Comma-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nexport function parse(value) {\r\n  /** @type {Array<string>} */\r\n  const tokens = []\r\n  const input = String(value || '')\r\n  let index = input.indexOf(',')\r\n  let start = 0\r\n  /** @type {boolean} */\r\n  let end = false\r\n\r\n  while (!end) {\r\n    if (index === -1) {\r\n      index = input.length\r\n      end = true\r\n    }\r\n\r\n    const token = input.slice(start, index).trim()\r\n\r\n    if (token || !end) {\r\n      tokens.push(token)\r\n    }\r\n\r\n    start = index + 1\r\n    index = input.indexOf(',', start)\r\n  }\r\n\r\n  return tokens\r\n}\r\n\r\n/**\r\n * Serialize an array of strings or numbers to comma-separated tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @param {Options} [options]\r\n *   Configuration for `stringify` (optional).\r\n * @returns {string}\r\n *   Comma-separated tokens.\r\n */\r\nexport function stringify(values, options) {\r\n  const settings = options || {}\r\n\r\n  // Ensure the last empty entry is seen.\r\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\r\n\r\n  return input\r\n    .join(\r\n      (settings.padRight ? ' ' : '') +\r\n        ',' +\r\n        (settings.padLeft === false ? '' : ' ')\r\n    )\r\n    .trim()\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n */\r\n\r\n/**\r\n * @template {string} SimpleSelector\r\n *   Selector type.\r\n * @template {string} DefaultTagName\r\n *   Default tag name.\r\n * @typedef {(\r\n *   SimpleSelector extends ''\r\n *     ? DefaultTagName\r\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends string\r\n *     ? SimpleSelector\r\n *     : DefaultTagName\r\n * )} ExtractTagName\r\n *   Extract tag name from a simple selector.\r\n */\r\n\r\nconst search = /[#.]/g\r\n\r\n/**\r\n * Create a hast element from a simple CSS selector.\r\n *\r\n * @template {string} Selector\r\n *   Type of selector.\r\n * @template {string} [DefaultTagName='div']\r\n *   Type of default tag name (default: `'div'`).\r\n * @param {Selector | null | undefined} [selector]\r\n *   Simple CSS selector (optional).\r\n *\r\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\r\n *   Multiple classes are allowed.\r\n *   Uses the last ID if multiple IDs are found.\r\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\r\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\r\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\r\n *   Built element.\r\n */\r\nexport function parseSelector(selector, defaultTagName) {\r\n  const value = selector || ''\r\n  /** @type {Properties} */\r\n  const props = {}\r\n  let start = 0\r\n  /** @type {string | undefined} */\r\n  let previous\r\n  /** @type {string | undefined} */\r\n  let tagName\r\n\r\n  while (start < value.length) {\r\n    search.lastIndex = start\r\n    const match = search.exec(value)\r\n    const subvalue = value.slice(start, match ? match.index : value.length)\r\n\r\n    if (subvalue) {\r\n      if (!previous) {\r\n        tagName = subvalue\r\n      } else if (previous === '#') {\r\n        props.id = subvalue\r\n      } else if (Array.isArray(props.className)) {\r\n        props.className.push(subvalue)\r\n      } else {\r\n        props.className = [subvalue]\r\n      }\r\n\r\n      start += subvalue.length\r\n    }\r\n\r\n    if (match) {\r\n      previous = match[0]\r\n      start++\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    // @ts-expect-error: tag name is parsed.\r\n    tagName: tagName || defaultTagName || 'div',\r\n    properties: props,\r\n    children: []\r\n  }\r\n}\r\n", "/**\r\n * Parse space-separated tokens to an array of strings.\r\n *\r\n * @param {string} value\r\n *   Space-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nexport function parse(value) {\r\n  const input = String(value || '').trim()\r\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\r\n}\r\n\r\n/**\r\n * Serialize an array of strings as space separated-tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @returns {string}\r\n *   Space-separated tokens.\r\n */\r\nexport function stringify(values) {\r\n  return values.join(' ').trim()\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {Element | Root} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {number | string} StyleValue\r\n *   Value for a CSS style field.\r\n * @typedef {Record<string, StyleValue>} Style\r\n *   Supported value of a `style` prop.\r\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\r\n *   Primitive property value.\r\n * @typedef {Array<number | string>} ArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\r\n *   Primitive value or list value.\r\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\r\n *   Acceptable value for element properties.\r\n *\r\n * @typedef {number | string | null | undefined} PrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\r\n *   List of children.\r\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\r\n *   List of children (deep).\r\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\r\n *   Acceptable child value.\r\n */\r\n\r\nimport {parse as commas} from 'comma-separated-tokens'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {find, normalize} from 'property-information'\r\nimport {parse as spaces} from 'space-separated-tokens'\r\n\r\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema to use.\r\n * @param {string} defaultTagName\r\n *   Default tag name.\r\n * @param {Array<string> | undefined} [caseSensitive]\r\n *   Case-sensitive tag names (default: `undefined`).\r\n * @returns\r\n *   `h`.\r\n */\r\nexport function createH(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\r\n\r\n  /**\r\n   * Hyperscript compatible DSL for creating virtual hast trees.\r\n   *\r\n   * @overload\r\n   * @param {null | undefined} [selector]\r\n   * @param {...Child} children\r\n   * @returns {Root}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {Properties} properties\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @param {string | null | undefined} [selector]\r\n   *   Selector.\r\n   * @param {Child | Properties | null | undefined} [properties]\r\n   *   Properties (or first child) (default: `undefined`).\r\n   * @param {...Child} children\r\n   *   Children.\r\n   * @returns {Result}\r\n   *   Result.\r\n   */\r\n  function h(selector, properties, ...children) {\r\n    let index = -1\r\n    /** @type {Result} */\r\n    let node\r\n\r\n    if (selector === undefined || selector === null) {\r\n      node = {type: 'root', children: []}\r\n      // Properties are not supported for roots.\r\n      const child = /** @type {Child} */ (properties)\r\n      children.unshift(child)\r\n    } else {\r\n      node = parseSelector(selector, defaultTagName)\r\n      // Normalize the name.\r\n      node.tagName = node.tagName.toLowerCase()\r\n      if (adjust && own.call(adjust, node.tagName)) {\r\n        node.tagName = adjust[node.tagName]\r\n      }\r\n\r\n      // Handle props.\r\n      if (isProperties(properties, node.tagName)) {\r\n        /** @type {string} */\r\n        let key\r\n\r\n        for (key in properties) {\r\n          if (own.call(properties, key)) {\r\n            addProperty(schema, node.properties, key, properties[key])\r\n          }\r\n        }\r\n      } else {\r\n        children.unshift(properties)\r\n      }\r\n    }\r\n\r\n    // Handle children.\r\n    while (++index < children.length) {\r\n      addChild(node.children, children[index])\r\n    }\r\n\r\n    if (node.type === 'element' && node.tagName === 'template') {\r\n      node.content = {type: 'root', children: node.children}\r\n      node.children = []\r\n    }\r\n\r\n    return node\r\n  }\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * Check if something is properties or a child.\r\n *\r\n * @param {Child | Properties} value\r\n *   Value to check.\r\n * @param {string} name\r\n *   Tag name.\r\n * @returns {value is Properties}\r\n *   Whether `value` is a properties object.\r\n */\r\nfunction isProperties(value, name) {\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    typeof value !== 'object' ||\r\n    Array.isArray(value)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\r\n    return true\r\n  }\r\n\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'button') {\r\n    return buttonTypes.has(value.type.toLowerCase())\r\n  }\r\n\r\n  return !('value' in value)\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema.\r\n * @param {Properties} properties\r\n *   Properties object.\r\n * @param {string} key\r\n *   Property name.\r\n * @param {PropertyValue | Style} value\r\n *   Property value.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  let index = -1\r\n  /** @type {PropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === undefined || value === null) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = spaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = commas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = spaces(commas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = value.concat()\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<number | string>} */\r\n    const finalResult = []\r\n\r\n    while (++index < result.length) {\r\n      // Assume no booleans in array.\r\n      const value = /** @type {number | string} */ (\r\n        parsePrimitive(info, info.property, result[index])\r\n      )\r\n      finalResult[index] = value\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // Assume no booleans in `className`.\r\n    const value = /** @type {number | string} */ (result)\r\n    result = properties.className.concat(value)\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<RootContent>} nodes\r\n *   Children.\r\n * @param {Child} value\r\n *   Child.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addChild(nodes, value) {\r\n  let index = -1\r\n\r\n  if (value === undefined || value === null) {\r\n    // Empty.\r\n  } else if (typeof value === 'string' || typeof value === 'number') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    while (++index < value.length) {\r\n      addChild(nodes, value[index])\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n *   Property information.\r\n * @param {string} name\r\n *   Property name.\r\n * @param {PrimitiveValue} value\r\n *   Property value.\r\n * @returns {PrimitiveValue}\r\n *   Property value.\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {Style} value\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      result.push([key, value[key]].join(': '))\r\n    }\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {Array<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Record<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[values[index].toLowerCase()] = values[index]\r\n  }\r\n\r\n  return result\r\n}\r\n", "export const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "/**\r\n * @typedef {import('./create-h.js').Child} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./create-h.js').Properties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./create-h.js').Result} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\r\n\r\n// Register the JSX namespace on `h`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\r\n\r\n// Register the JSX namespace on `s`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {createH} from './create-h.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const h = createH(html, 'div')\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\r\n", "/**\r\n * @import {VFile, Value} from 'vfile'\r\n * @import {Location} from 'vfile-location'\r\n */\r\n\r\n/**\r\n * Create an index of the given document to translate between line/column and\r\n * offset based positional info.\r\n *\r\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\r\n *\r\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\r\n *\r\n * @param {VFile | Value} file\r\n *   File to index.\r\n * @returns {Location}\r\n *   Accessors for index.\r\n */\r\nexport function location(file) {\r\n  const value = String(file)\r\n  /**\r\n   * List, where each index is a line number (0-based), and each value is the\r\n   * byte index *after* where the line ends.\r\n   *\r\n   * @type {Array<number>}\r\n   */\r\n  const indices = []\r\n\r\n  return {toOffset, toPoint}\r\n\r\n  /** @type {Location['toPoint']} */\r\n  function toPoint(offset) {\r\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\r\n      let index = 0\r\n\r\n      while (true) {\r\n        let end = indices[index]\r\n\r\n        if (end === undefined) {\r\n          const eol = next(value, indices[index - 1])\r\n          end = eol === -1 ? value.length + 1 : eol + 1\r\n          indices[index] = end\r\n        }\r\n\r\n        if (end > offset) {\r\n          return {\r\n            line: index + 1,\r\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\r\n            offset\r\n          }\r\n        }\r\n\r\n        index++\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Location['toOffset']} */\r\n  function toOffset(point) {\r\n    if (\r\n      point &&\r\n      typeof point.line === 'number' &&\r\n      typeof point.column === 'number' &&\r\n      !Number.isNaN(point.line) &&\r\n      !Number.isNaN(point.column)\r\n    ) {\r\n      while (indices.length < point.line) {\r\n        const from = indices[indices.length - 1]\r\n        const eol = next(value, from)\r\n        const end = eol === -1 ? value.length + 1 : eol + 1\r\n        if (from === end) break\r\n        indices.push(end)\r\n      }\r\n\r\n      const offset =\r\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\r\n      // The given `column` could not exist on this line.\r\n      if (offset < indices[point.line - 1]) return offset\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} from\r\n */\r\nfunction next(value, from) {\r\n  const cr = value.indexOf('\\r', from)\r\n  const lf = value.indexOf('\\n', from)\r\n  if (lf === -1) return cr\r\n  if (cr === -1 || cr + 1 === lf) return lf\r\n  return cr < lf ? cr : lf\r\n}\r\n", "/**\r\n * Map of web namespaces.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nexport const webNamespaces = {\r\n  html: 'http://www.w3.org/1999/xhtml',\r\n  mathml: 'http://www.w3.org/1998/Math/MathML',\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementData} ElementData\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\r\n * @typedef {import('parse5').Token.Location} P5Location\r\n *\r\n * @typedef {import('property-information').Schema} Schema\r\n *\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Position} Position\r\n *\r\n * @typedef {import('vfile').VFile} VFile\r\n */\r\n\r\n/**\r\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\r\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\r\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\r\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\r\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\r\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\r\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\r\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in (default: `'html'`).\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n * @property {VFile | null | undefined} [file]\r\n *   File used to add positional info to nodes (optional).\r\n *\r\n *   If given, the file should represent the original HTML source.\r\n * @property {boolean | null | undefined} [verbose=false]\r\n *   Whether to add extra positional info about starting tags, closing tags,\r\n *   and attributes to elements (default: `false`).\r\n *\r\n *   > 👉 **Note**: only used when `file` is given.\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n *   Namespace.\r\n *\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {VFile | undefined} file\r\n *   Corresponding file.\r\n * @property {boolean} location\r\n *   Whether location info was found.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {boolean | undefined} verbose\r\n *   Add extra positional info.\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {h, s} from 'hastscript'\r\nimport {find, html, svg} from 'property-information'\r\nimport {location} from 'vfile-location'\r\nimport {webNamespaces} from 'web-namespaces'\r\n\r\nconst own = {}.hasOwnProperty\r\n/** @type {unknown} */\r\n// type-coverage:ignore-next-line\r\nconst proto = Object.prototype\r\n\r\n/**\r\n * Transform a `parse5` AST to hast.\r\n *\r\n * @param {P5Node} tree\r\n *   `parse5` tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Nodes}\r\n *   hast tree.\r\n */\r\nexport function fromParse5(tree, options) {\r\n  const settings = options || {}\r\n\r\n  return one(\r\n    {\r\n      file: settings.file || undefined,\r\n      location: false,\r\n      schema: settings.space === 'svg' ? svg : html,\r\n      verbose: settings.verbose || false\r\n    },\r\n    tree\r\n  )\r\n}\r\n\r\n/**\r\n * Transform a node.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} node\r\n *   p5 node.\r\n * @returns {Nodes}\r\n *   hast node.\r\n */\r\nfunction one(state, node) {\r\n  /** @type {Nodes} */\r\n  let result\r\n\r\n  switch (node.nodeName) {\r\n    case '#comment': {\r\n      const reference = /** @type {P5Comment} */ (node)\r\n      result = {type: 'comment', value: reference.data}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#document':\r\n    case '#document-fragment': {\r\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\r\n      const quirksMode =\r\n        'mode' in reference\r\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\r\n          : false\r\n\r\n      result = {\r\n        type: 'root',\r\n        children: all(state, node.childNodes),\r\n        data: {quirksMode}\r\n      }\r\n\r\n      if (state.file && state.location) {\r\n        const doc = String(state.file)\r\n        const loc = location(doc)\r\n        const start = loc.toPoint(0)\r\n        const end = loc.toPoint(doc.length)\r\n        // Always defined as we give valid input.\r\n        assert(start, 'expected `start`')\r\n        assert(end, 'expected `end`')\r\n        result.position = {start, end}\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    case '#documentType': {\r\n      const reference = /** @type {P5DocumentType} */ (node)\r\n      result = {type: 'doctype'}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#text': {\r\n      const reference = /** @type {P5Text} */ (node)\r\n      result = {type: 'text', value: reference.value}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    // Element.\r\n    default: {\r\n      const reference = /** @type {P5Element} */ (node)\r\n      result = element(state, reference)\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform children.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Array<P5Node>} nodes\r\n *   Nodes.\r\n * @returns {Array<RootContent>}\r\n *   hast nodes.\r\n */\r\nfunction all(state, nodes) {\r\n  let index = -1\r\n  /** @type {Array<RootContent>} */\r\n  const results = []\r\n\r\n  while (++index < nodes.length) {\r\n    // Assume no roots in `nodes`.\r\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\r\n    results.push(result)\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Element} node\r\n *   `parse5` node to transform.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction element(state, node) {\r\n  const schema = state.schema\r\n\r\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\r\n\r\n  // Props.\r\n  let index = -1\r\n  /** @type {Record<string, string>} */\r\n  const props = {}\r\n\r\n  while (++index < node.attrs.length) {\r\n    const attribute = node.attrs[index]\r\n    const name =\r\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\r\n    if (!own.call(proto, name)) {\r\n      props[name] = attribute.value\r\n    }\r\n  }\r\n\r\n  // Build.\r\n  const fn = state.schema.space === 'svg' ? s : h\r\n  const result = fn(node.tagName, props, all(state, node.childNodes))\r\n  patch(state, node, result)\r\n\r\n  // Switch content.\r\n  if (result.tagName === 'template') {\r\n    const reference = /** @type {P5Template} */ (node)\r\n    const pos = reference.sourceCodeLocation\r\n    const startTag = pos && pos.startTag && position(pos.startTag)\r\n    const endTag = pos && pos.endTag && position(pos.endTag)\r\n\r\n    // Root in, root out.\r\n    const content = /** @type {Root} */ (one(state, reference.content))\r\n\r\n    if (startTag && endTag && state.file) {\r\n      content.position = {start: startTag.end, end: endTag.start}\r\n    }\r\n\r\n    result.content = content\r\n  }\r\n\r\n  state.schema = schema\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Patch positional info from `from` onto `to`.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} from\r\n *   p5 node.\r\n * @param {Nodes} to\r\n *   hast node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction patch(state, from, to) {\r\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\r\n    const position = createLocation(state, to, from.sourceCodeLocation)\r\n\r\n    if (position) {\r\n      state.location = true\r\n      to.position = position\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create clean positional information.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Nodes} node\r\n *   hast node.\r\n * @param {P5ElementLocation} location\r\n *   p5 location info.\r\n * @returns {Position | undefined}\r\n *   Position, or nothing.\r\n */\r\nfunction createLocation(state, node, location) {\r\n  const result = position(location)\r\n\r\n  if (node.type === 'element') {\r\n    const tail = node.children[node.children.length - 1]\r\n\r\n    // Bug for unclosed with children.\r\n    // See: <https://github.com/inikulin/parse5/issues/109>.\r\n    if (\r\n      result &&\r\n      !location.endTag &&\r\n      tail &&\r\n      tail.position &&\r\n      tail.position.end\r\n    ) {\r\n      result.end = Object.assign({}, tail.position.end)\r\n    }\r\n\r\n    if (state.verbose) {\r\n      /** @type {Record<string, Position | undefined>} */\r\n      const props = {}\r\n      /** @type {string} */\r\n      let key\r\n\r\n      if (location.attrs) {\r\n        for (key in location.attrs) {\r\n          if (own.call(location.attrs, key)) {\r\n            props[find(state.schema, key).property] = position(\r\n              location.attrs[key]\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      assert(location.startTag, 'a start tag should exist')\r\n      const opening = position(location.startTag)\r\n      const closing = location.endTag ? position(location.endTag) : undefined\r\n      /** @type {ElementData['position']} */\r\n      const data = {opening}\r\n      if (closing) data.closing = closing\r\n      data.properties = props\r\n\r\n      node.data = {position: data}\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Turn a p5 location into a position.\r\n *\r\n * @param {P5Location} loc\r\n *   Location.\r\n * @returns {Position | undefined}\r\n *   Position or nothing.\r\n */\r\nfunction position(loc) {\r\n  const start = point({\r\n    line: loc.startLine,\r\n    column: loc.startCol,\r\n    offset: loc.startOffset\r\n  })\r\n  const end = point({\r\n    line: loc.endLine,\r\n    column: loc.endCol,\r\n    offset: loc.endOffset\r\n  })\r\n\r\n  // @ts-expect-error: we do use `undefined` for points if one or the other\r\n  // exists.\r\n  return start || end ? {start, end} : undefined\r\n}\r\n\r\n/**\r\n * Filter out invalid points.\r\n *\r\n * @param {Point} point\r\n *   Point with potentially `undefined` values.\r\n * @returns {Point | undefined}\r\n *   Point or nothing.\r\n */\r\nfunction point(point) {\r\n  return point.line && point.column ? point : undefined\r\n}\r\n", "/**\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Doctype} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n * @typedef {import('hast').Text} Text\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\r\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\r\n *\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in (default: `'html'`).\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n *\r\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n */\r\n\r\nimport {stringify as commas} from 'comma-separated-tokens'\r\nimport {ok as assert} from 'devlop'\r\nimport {find, html, svg} from 'property-information'\r\nimport {stringify as spaces} from 'space-separated-tokens'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\r\n\r\n/**\r\n * Transform a hast tree to a `parse5` AST.\r\n *\r\n * @param {Nodes} tree\r\n *   Tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Parse5Nodes}\r\n *   `parse5` node.\r\n */\r\nexport function toParse5(tree, options) {\r\n  const settings = options || emptyOptions\r\n  const space = settings.space\r\n  return one(tree, space === 'svg' ? svg : html)\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Document}\r\n *   Parse5 node.\r\n */\r\nfunction root(node, schema) {\r\n  /** @type {Parse5Document} */\r\n  const result = {\r\n    nodeName: '#document',\r\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\r\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\r\n    childNodes: []\r\n  }\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Fragment}\r\n *   Parse5 node.\r\n */\r\nfunction fragment(node, schema) {\r\n  /** @type {Parse5Fragment} */\r\n  const result = {nodeName: '#document-fragment', childNodes: []}\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Doctype} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Doctype}\r\n *   Parse5 node.\r\n */\r\nfunction doctype(node) {\r\n  /** @type {Parse5Doctype} */\r\n  const result = {\r\n    nodeName: '#documentType',\r\n    name: 'html',\r\n    publicId: '',\r\n    systemId: '',\r\n    parentNode: null\r\n  }\r\n\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Text} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Text}\r\n *   Parse5 node.\r\n */\r\nfunction text(node) {\r\n  /** @type {Parse5Text} */\r\n  const result = {\r\n    nodeName: '#text',\r\n    value: node.value,\r\n    parentNode: null\r\n  }\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Comment} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Comment}\r\n *   Parse5 node.\r\n */\r\nfunction comment(node) {\r\n  /** @type {Parse5Comment} */\r\n  const result = {\r\n    nodeName: '#comment',\r\n    data: node.value,\r\n    parentNode: null\r\n  }\r\n\r\n  patch(node, result)\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Element}\r\n *   Parse5 node.\r\n */\r\nfunction element(node, schema) {\r\n  const parentSchema = schema\r\n  let currentSchema = parentSchema\r\n\r\n  if (\r\n    node.type === 'element' &&\r\n    node.tagName.toLowerCase() === 'svg' &&\r\n    parentSchema.space === 'html'\r\n  ) {\r\n    currentSchema = svg\r\n  }\r\n\r\n  /** @type {Array<Parse5Attribute>} */\r\n  const attrs = []\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  if (node.properties) {\r\n    for (prop in node.properties) {\r\n      if (prop !== 'children' && own.call(node.properties, prop)) {\r\n        const result = createProperty(\r\n          currentSchema,\r\n          prop,\r\n          node.properties[prop]\r\n        )\r\n\r\n        if (result) {\r\n          attrs.push(result)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const space = currentSchema.space\r\n  // `html` and `svg` both have a space.\r\n  assert(space)\r\n\r\n  /** @type {Parse5Element} */\r\n  const result = {\r\n    nodeName: node.tagName,\r\n    tagName: node.tagName,\r\n    attrs,\r\n    // @ts-expect-error: `parse5` types are wrong.\r\n    namespaceURI: webNamespaces[space],\r\n    childNodes: [],\r\n    parentNode: null\r\n  }\r\n  result.childNodes = all(node.children, result, currentSchema)\r\n  patch(node, result)\r\n\r\n  if (node.tagName === 'template' && node.content) {\r\n    // @ts-expect-error: `parse5` types are wrong.\r\n    result.content = fragment(node.content, currentSchema)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Handle a property.\r\n *\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @param {string} prop\r\n *   Key.\r\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\r\n *   hast property value.\r\n * @returns {Parse5Attribute | undefined}\r\n *   Field for runtime, optional.\r\n */\r\nfunction createProperty(schema, prop, value) {\r\n  const info = find(schema, prop)\r\n\r\n  // Ignore nullish and `NaN` values.\r\n  if (\r\n    value === false ||\r\n    value === null ||\r\n    value === undefined ||\r\n    (typeof value === 'number' && Number.isNaN(value)) ||\r\n    (!value && info.boolean)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    // Accept `array`.\r\n    // Most props are space-separated.\r\n    value = info.commaSeparated ? commas(value) : spaces(value)\r\n  }\r\n\r\n  /** @type {Parse5Attribute} */\r\n  const attribute = {\r\n    name: info.attribute,\r\n    value: value === true ? '' : String(value)\r\n  }\r\n\r\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\r\n    const index = attribute.name.indexOf(':')\r\n\r\n    if (index < 0) {\r\n      attribute.prefix = ''\r\n    } else {\r\n      attribute.name = attribute.name.slice(index + 1)\r\n      attribute.prefix = info.attribute.slice(0, index)\r\n    }\r\n\r\n    attribute.namespace = webNamespaces[info.space]\r\n  }\r\n\r\n  return attribute\r\n}\r\n\r\n/**\r\n * Transform all hast nodes.\r\n *\r\n * @param {Array<RootContent>} children\r\n *   List of children.\r\n * @param {Parse5Parent} parentNode\r\n *   `parse5` parent node.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Array<Parse5Content>}\r\n *   Transformed children.\r\n */\r\nfunction all(children, parentNode, schema) {\r\n  let index = -1\r\n  /** @type {Array<Parse5Content>} */\r\n  const results = []\r\n\r\n  if (children) {\r\n    while (++index < children.length) {\r\n      /** @type {Parse5Content} */\r\n      const child = one(children[index], schema)\r\n\r\n      child.parentNode = parentNode\r\n\r\n      results.push(child)\r\n    }\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Add position info from `from` to `to`.\r\n *\r\n * @param {Nodes} from\r\n *   hast node.\r\n * @param {Parse5Nodes} to\r\n *   `parse5` node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction patch(from, to) {\r\n  const position = from.position\r\n\r\n  if (position && position.start && position.end) {\r\n    assert(typeof position.start.offset === 'number')\r\n    assert(typeof position.end.offset === 'number')\r\n\r\n    to.sourceCodeLocation = {\r\n      startLine: position.start.line,\r\n      startCol: position.start.column,\r\n      startOffset: position.start.offset,\r\n      endLine: position.end.line,\r\n      endCol: position.end.column,\r\n      endOffset: position.end.offset\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * List of HTML void tag names.\r\n *\r\n * @type {Array<string>}\r\n */\r\nexport const htmlVoidElements = [\r\n  'area',\r\n  'base',\r\n  'basefont',\r\n  'bgsound',\r\n  'br',\r\n  'col',\r\n  'command',\r\n  'embed',\r\n  'frame',\r\n  'hr',\r\n  'image',\r\n  'img',\r\n  'input',\r\n  'keygen',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr'\r\n]\r\n", "/**\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Doctype} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n * @typedef {import('hast').Text} Text\r\n *\r\n * @typedef {import('hast-util-raw').Options} Options\r\n *\r\n * @typedef {import('mdast-util-to-hast').Raw} Raw\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\r\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\r\n * @typedef {import('parse5').Token.CommentToken} CommentToken\r\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\r\n * @typedef {import('parse5').Token.Location} Location\r\n * @typedef {import('parse5').Token.TagToken} TagToken\r\n *\r\n * @typedef {import('unist').Point} Point\r\n */\r\n\r\n/**\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {(node: Nodes) => undefined} handle\r\n *   Add a hast node to the parser.\r\n * @property {Options} options\r\n *   User configuration.\r\n * @property {Parser<DefaultTreeAdapterMap>} parser\r\n *   Current parser.\r\n * @property {boolean} stitches\r\n *   Whether there are stitches.\r\n */\r\n\r\n/**\r\n * @typedef Stitch\r\n *   Custom comment-like value we pass through parse5, which contains a\r\n *   replacement node that we’ll swap back in afterwards.\r\n * @property {'comment'} type\r\n *   Node type.\r\n * @property {{stitch: Nodes}} value\r\n *   Replacement value.\r\n */\r\n\r\nimport structuredClone from '@ungap/structured-clone'\r\nimport {fromParse5} from 'hast-util-from-parse5'\r\nimport {toParse5} from 'hast-util-to-parse5'\r\nimport {htmlVoidElements} from 'html-void-elements'\r\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\r\nimport {pointEnd, pointStart} from 'unist-util-position'\r\nimport {visit} from 'unist-util-visit'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\n// Node types associated with MDX.\r\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\r\nconst knownMdxNames = new Set([\r\n  'mdxFlowExpression',\r\n  'mdxJsxFlowElement',\r\n  'mdxJsxTextElement',\r\n  'mdxTextExpression',\r\n  'mdxjsEsm'\r\n])\r\n\r\n/** @type {ParserOptions} */\r\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\r\n\r\n/**\r\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\r\n * raw nodes into actual nodes.\r\n *\r\n * @param {Nodes} tree\r\n *   Original hast tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Nodes}\r\n *   Parsed again tree.\r\n */\r\nexport function raw(tree, options) {\r\n  const document = documentMode(tree)\r\n  /** @type {(node: Nodes, state: State) => undefined} */\r\n  const one = zwitch('type', {\r\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\r\n    unknown\r\n  })\r\n\r\n  /** @type {State} */\r\n  const state = {\r\n    parser: document\r\n      ? new Parser(parseOptions)\r\n      : Parser.getFragmentParser(undefined, parseOptions),\r\n    handle(node) {\r\n      one(node, state)\r\n    },\r\n    stitches: false,\r\n    options: options || {}\r\n  }\r\n\r\n  one(tree, state)\r\n  resetTokenizer(state, pointStart())\r\n\r\n  const p5 = document ? state.parser.document : state.parser.getFragment()\r\n  const result = fromParse5(p5, {\r\n    // To do: support `space`?\r\n    file: state.options.file\r\n  })\r\n\r\n  if (state.stitches) {\r\n    visit(result, 'comment', function (node, index, parent) {\r\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\r\n      if (stitch.value.stitch && parent && index !== undefined) {\r\n        /** @type {Array<RootContent>} */\r\n        const siblings = parent.children\r\n        // @ts-expect-error: assume the stitch is allowed.\r\n        siblings[index] = stitch.value.stitch\r\n        return index\r\n      }\r\n    })\r\n  }\r\n\r\n  // Unpack if possible and when not given a `root`.\r\n  if (\r\n    result.type === 'root' &&\r\n    result.children.length === 1 &&\r\n    result.children[0].type === tree.type\r\n  ) {\r\n    return result.children[0]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Transform all nodes\r\n *\r\n * @param {Array<RootContent>} nodes\r\n *   hast content.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction all(nodes, state) {\r\n  let index = -1\r\n\r\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\r\n  if (nodes) {\r\n    while (++index < nodes.length) {\r\n      state.handle(nodes[index])\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform a root.\r\n *\r\n * @param {Root} node\r\n *   hast root node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction root(node, state) {\r\n  all(node.children, state)\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {Element} node\r\n *   hast element node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction element(node, state) {\r\n  startTag(node, state)\r\n\r\n  all(node.children, state)\r\n\r\n  endTag(node, state)\r\n}\r\n\r\n/**\r\n * Transform a text.\r\n *\r\n * @param {Text} node\r\n *   hast text node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction text(node, state) {\r\n  // Allow `DATA` through `PLAINTEXT`,\r\n  // but when hanging in a tag for example,\r\n  // switch back to `DATA`.\r\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\r\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\r\n  if (state.parser.tokenizer.state > 4) {\r\n    state.parser.tokenizer.state = 0\r\n  }\r\n\r\n  /** @type {CharacterToken} */\r\n  const token = {\r\n    type: Token.TokenType.CHARACTER,\r\n    chars: node.value,\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a doctype.\r\n *\r\n * @param {Doctype} node\r\n *   hast doctype node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction doctype(node, state) {\r\n  /** @type {DoctypeToken} */\r\n  const token = {\r\n    type: Token.TokenType.DOCTYPE,\r\n    name: 'html',\r\n    forceQuirks: false,\r\n    publicId: '',\r\n    systemId: '',\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a stitch.\r\n *\r\n * @param {Nodes} node\r\n *   unknown node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction stitch(node, state) {\r\n  // Mark that there are stitches, so we need to walk the tree and revert them.\r\n  state.stitches = true\r\n\r\n  /** @type {Nodes} */\r\n  const clone = cloneWithoutChildren(node)\r\n\r\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\r\n  // passed through node).\r\n  if ('children' in node && 'children' in clone) {\r\n    // Root in root out.\r\n    const fakeRoot = /** @type {Root} */ (\r\n      raw({type: 'root', children: node.children}, state.options)\r\n    )\r\n    clone.children = fakeRoot.children\r\n  }\r\n\r\n  // Hack: `value` is supposed to be a string, but as none of the tools\r\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\r\n  // through.\r\n  comment({type: 'comment', value: {stitch: clone}}, state)\r\n}\r\n\r\n/**\r\n * Transform a comment (or stitch).\r\n *\r\n * @param {Comment | Stitch} node\r\n *   hast comment node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction comment(node, state) {\r\n  /** @type {string} */\r\n  // @ts-expect-error: we pass stitches through.\r\n  const data = node.value\r\n\r\n  /** @type {CommentToken} */\r\n  const token = {\r\n    type: Token.TokenType.COMMENT,\r\n    data,\r\n    location: createParse5Location(node)\r\n  }\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a raw node.\r\n *\r\n * @param {Raw} node\r\n *   hast raw node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction handleRaw(node, state) {\r\n  // Reset preprocessor:\r\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\r\n  state.parser.tokenizer.preprocessor.html = ''\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.pos = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.gapStack = []\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\r\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.isEol = false\r\n\r\n  // Now pass `node.value`.\r\n  setPoint(state, pointStart(node))\r\n  state.parser.tokenizer.write(node.value, false)\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer._runParsingLoop()\r\n\r\n  // Character references hang, so if we ended there, we need to flush\r\n  // those too.\r\n  // We reset the preprocessor as if the document ends here.\r\n  // Then one single call to the relevant state does the trick, parse5\r\n  // consumes the whole token.\r\n\r\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\r\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\r\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\r\n  // Investigate when it is.\r\n  if (\r\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\r\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\r\n  ) {\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\r\n    /** @type {number} */\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    const cp = state.parser.tokenizer._consume()\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer._callState(cp)\r\n  }\r\n}\r\n\r\n/**\r\n * Crash on an unknown node.\r\n *\r\n * @param {unknown} node_\r\n *   unknown node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Never.\r\n */\r\nfunction unknown(node_, state) {\r\n  const node = /** @type {Nodes} */ (node_)\r\n\r\n  if (\r\n    state.options.passThrough &&\r\n    state.options.passThrough.includes(node.type)\r\n  ) {\r\n    stitch(node, state)\r\n  } else {\r\n    let extra = ''\r\n\r\n    if (knownMdxNames.has(node.type)) {\r\n      extra =\r\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\r\n    }\r\n\r\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\r\n  }\r\n}\r\n\r\n/**\r\n * Reset the tokenizer of a parser.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Point | undefined} point\r\n *   Point.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction resetTokenizer(state, point) {\r\n  setPoint(state, point)\r\n\r\n  // Process final characters if they’re still there after hibernating.\r\n  /** @type {CharacterToken} */\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  const token = state.parser.tokenizer.currentCharacterToken\r\n\r\n  if (token && token.location) {\r\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\r\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\r\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.currentToken = token\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser._processToken(state.parser.currentToken)\r\n  }\r\n\r\n  // Reset tokenizer:\r\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\r\n  // Especially putting it back in the `data` state is useful: some elements,\r\n  // like textareas and iframes, change the state.\r\n  // See GH-7.\r\n  // But also if broken HTML is in `raw`, and then a correct element is given.\r\n  // See GH-11.\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.paused = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.inLoop = false\r\n\r\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\r\n  // manually update those when needed.\r\n  state.parser.tokenizer.active = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.charRefCode = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.consumedAfterSnapshot = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentLocation = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentCharacterToken = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentToken = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\r\n}\r\n\r\n/**\r\n * Set current location.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Point | undefined} point\r\n *   Point.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction setPoint(state, point) {\r\n  if (point && point.offset !== undefined) {\r\n    /** @type {Location} */\r\n    const location = {\r\n      startLine: point.line,\r\n      startCol: point.column,\r\n      startOffset: point.offset,\r\n      endLine: -1,\r\n      endCol: -1,\r\n      endOffset: -1\r\n    }\r\n\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\r\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\r\n    state.parser.tokenizer.preprocessor.line = point.line\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.currentLocation = location\r\n  }\r\n}\r\n\r\n/**\r\n * Emit a start tag.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction startTag(node, state) {\r\n  const tagName = node.tagName.toLowerCase()\r\n\r\n  // Ignore tags if we’re in plain text.\r\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n\r\n  const current = state.parser.openElements.current\r\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\r\n\r\n  if (ns === webNamespaces.html && tagName === 'svg') {\r\n    ns = webNamespaces.svg\r\n  }\r\n\r\n  const result = toParse5(\r\n    // Shallow clone to not delve into `children`: we only need the attributes.\r\n    {...node, children: []},\r\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\r\n  )\r\n\r\n  /** @type {TagToken} */\r\n  const tag = {\r\n    type: Token.TokenType.START_TAG,\r\n    tagName,\r\n    tagID: html.getTagID(tagName),\r\n    // We always send start and end tags.\r\n    selfClosing: false,\r\n    ackSelfClosing: false,\r\n    // Always element.\r\n    /* c8 ignore next */\r\n    attrs: 'attrs' in result ? result.attrs : [],\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  // The HTML parsing algorithm works by doing half of the state management in\r\n  // the tokenizer and half in the parser.\r\n  // We can’t use the tokenizer here, as we don’t have strings.\r\n  // So we act *as if* the tokenizer emits tokens:\r\n\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = tag\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n\r\n  // …but then we still need a bunch of work that the tokenizer would normally\r\n  // do, such as:\r\n\r\n  // Set a tag name, similar to how the tokenizer would do it.\r\n  state.parser.tokenizer.lastStartTagName = tagName\r\n\r\n  // `inForeignNode` is correctly set by the parser.\r\n}\r\n\r\n/**\r\n * Emit an end tag.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction endTag(node, state) {\r\n  const tagName = node.tagName.toLowerCase()\r\n  // Do not emit closing tags for HTML void elements.\r\n  if (\r\n    !state.parser.tokenizer.inForeignNode &&\r\n    htmlVoidElements.includes(tagName)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  // Ignore tags if we’re in plain text.\r\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\r\n\r\n  resetTokenizer(state, pointEnd(node))\r\n\r\n  /** @type {TagToken} */\r\n  const tag = {\r\n    type: Token.TokenType.END_TAG,\r\n    tagName,\r\n    tagID: html.getTagID(tagName),\r\n    selfClosing: false,\r\n    ackSelfClosing: false,\r\n    attrs: [],\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  // The HTML parsing algorithm works by doing half of the state management in\r\n  // the tokenizer and half in the parser.\r\n  // We can’t use the tokenizer here, as we don’t have strings.\r\n  // So we act *as if* the tokenizer emits tokens:\r\n\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = tag\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n\r\n  // …but then we still need a bunch of work that the tokenizer would normally\r\n  // do, such as:\r\n\r\n  // Switch back to the data state after alternative states that don’t accept\r\n  // tags:\r\n  if (\r\n    // Current element is closed.\r\n    tagName === state.parser.tokenizer.lastStartTagName &&\r\n    // `<textarea>` and `<title>`\r\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\r\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\r\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\r\n      // `<script>`\r\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\r\n  ) {\r\n    state.parser.tokenizer.state = TokenizerMode.DATA\r\n  }\r\n}\r\n\r\n/**\r\n * Check if `node` represents a whole document or a fragment.\r\n *\r\n * @param {Nodes} node\r\n *   hast node.\r\n * @returns {boolean}\r\n *   Whether this represents a whole document or a fragment.\r\n */\r\nfunction documentMode(node) {\r\n  const head = node.type === 'root' ? node.children[0] : node\r\n  return Boolean(\r\n    head &&\r\n      (head.type === 'doctype' ||\r\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\r\n  )\r\n}\r\n\r\n/**\r\n * Get a `parse5` location from a node.\r\n *\r\n * @param {Nodes | Stitch} node\r\n *   hast node.\r\n * @returns {Location}\r\n *   `parse5` location.\r\n */\r\nfunction createParse5Location(node) {\r\n  const start = pointStart(node) || {\r\n    line: undefined,\r\n    column: undefined,\r\n    offset: undefined\r\n  }\r\n  const end = pointEnd(node) || {\r\n    line: undefined,\r\n    column: undefined,\r\n    offset: undefined\r\n  }\r\n\r\n  /** @type {Record<keyof Location, number | undefined>} */\r\n  const location = {\r\n    startLine: start.line,\r\n    startCol: start.column,\r\n    startOffset: start.offset,\r\n    endLine: end.line,\r\n    endCol: end.column,\r\n    endOffset: end.offset\r\n  }\r\n\r\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\r\n  // `parse5` types don’t want.\r\n  return location\r\n}\r\n\r\n/**\r\n * @template {Nodes} NodeType\r\n *   Node type.\r\n * @param {NodeType} node\r\n *   Node to clone.\r\n * @returns {NodeType}\r\n *   Cloned node, without children.\r\n */\r\nfunction cloneWithoutChildren(node) {\r\n  return 'children' in node\r\n    ? structuredClone({...node, children: []})\r\n    : structuredClone(node)\r\n}\r\n", "/**\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast-util-raw').Options} RawOptions\r\n * @typedef {import('vfile').VFile} VFile\r\n */\r\n\r\n/**\r\n * @typedef {Omit<RawOptions, 'file'>} Options\r\n *   Configuration.\r\n */\r\n\r\nimport {raw} from 'hast-util-raw'\r\n\r\n/**\r\n * Parse the tree (and raw nodes) again, keeping positional info okay.\r\n *\r\n * @param {Options | null | undefined}  [options]\r\n *   Configuration (optional).\r\n * @returns\r\n *   Transform.\r\n */\r\nexport default function rehypeRaw(options) {\r\n  /**\r\n   * @param {Root} tree\r\n   *   Tree.\r\n   * @param {VFile} file\r\n   *   File.\r\n   * @returns {Root}\r\n   *   New tree.\r\n   */\r\n  return function (tree, file) {\r\n    // Assume root in -> root out.\r\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\r\n    return result\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["html", "svg", "parse", "stringify", "own", "h", "parse", "value", "html", "svg", "point", "own", "svg", "html", "startTag", "endTag", "position", "location", "point", "own", "one", "element", "svg", "html", "all", "patch", "result", "stringify", "position", "one", "root", "element", "text", "comment", "doctype", "stitch", "all", "point", "location"]
}
